# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: ""
    version: 0.0.1
paths:
    /auth/login:
        post:
            tags:
                - Auth
            operationId: Auth_Login
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/auth.v1.LoginRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/auth.v1.LoginResponse'
    /auth/logout:
        post:
            tags:
                - Auth
            operationId: Auth_Logout
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/auth.v1.LogoutRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/auth.v1.LogoutResponse'
    /auth/refresh:
        post:
            tags:
                - Auth
            operationId: Auth_Refresh
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/auth.v1.RefreshRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/auth.v1.RefreshResponse'
    /auth/signup:
        post:
            tags:
                - Auth
            operationId: Auth_Signup
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/auth.v1.SignupRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/auth.v1.SignupResponse'
    /auth/validate:
        post:
            tags:
                - Auth
            operationId: Auth_Validate
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/auth.v1.ValidateRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/auth.v1.ValidateResponse'
    /users:
        get:
            tags:
                - Users
            operationId: Users_ListUsers
            parameters:
                - name: pagination.page
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: pagination.pageSize
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: filter.username
                  in: query
                  schema:
                    type: string
                - name: filter.email
                  in: query
                  schema:
                    type: string
                - name: filter.phone
                  in: query
                  schema:
                    type: string
                - name: filter.password
                  in: query
                  schema:
                    type: string
                - name: filter.picture
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/users.v1.ListUsersResponse'
        post:
            tags:
                - Users
            operationId: Users_CreateUser
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/users.v1.CreateUserRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/users.v1.CreateUserResponse'
    /users/search:
        get:
            tags:
                - Users
            operationId: Users_SearchUsers
            parameters:
                - name: query
                  in: query
                  schema:
                    type: string
                - name: pagination.page
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: pagination.pageSize
                  in: query
                  schema:
                    type: integer
                    format: int32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/users.v1.SearchUsersResponse'
    /users/{id}:
        get:
            tags:
                - Users
            operationId: Users_GetUser
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/users.v1.GetUserResponse'
        delete:
            tags:
                - Users
            operationId: Users_DeleteUser
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/users.v1.DeleteUserResponse'
        patch:
            tags:
                - Users
            operationId: Users_UpdateUser
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/users.v1.UpdateUserRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/users.v1.UpdateUserResponse'
components:
    schemas:
        auth.v1.LoginRequest:
            type: object
            properties:
                username:
                    type: string
                password:
                    type: string
        auth.v1.LoginResponse:
            type: object
            properties:
                accessToken:
                    type: string
                refreshToken:
                    type: string
        auth.v1.LogoutRequest:
            type: object
            properties:
                refreshToken:
                    type: string
        auth.v1.LogoutResponse:
            type: object
            properties:
                accessToken:
                    type: string
                refreshToken:
                    type: string
        auth.v1.RefreshRequest:
            type: object
            properties:
                refreshToken:
                    type: string
        auth.v1.RefreshResponse:
            type: object
            properties:
                accessToken:
                    type: string
                refreshToken:
                    type: string
        auth.v1.SignupRequest:
            type: object
            properties:
                username:
                    type: string
                email:
                    type: string
                password:
                    type: string
        auth.v1.SignupResponse:
            type: object
            properties:
                accessToken:
                    type: string
                refreshToken:
                    type: string
        auth.v1.ValidateRequest:
            type: object
            properties:
                accessToken:
                    type: string
        auth.v1.ValidateResponse:
            type: object
            properties:
                valid:
                    type: boolean
                id:
                    type: string
                username:
                    type: string
                email:
                    type: string
                exp:
                    type: string
        users.v1.CreateUserRequest:
            type: object
            properties:
                username:
                    type: string
                email:
                    type: string
                phone:
                    type: string
                password:
                    type: string
                picture:
                    type: string
        users.v1.CreateUserResponse:
            type: object
            properties:
                id:
                    type: string
        users.v1.DeleteUserResponse:
            type: object
            properties:
                id:
                    type: string
        users.v1.GetUserResponse:
            type: object
            properties:
                user:
                    $ref: '#/components/schemas/users.v1.User'
        users.v1.ListUsersResponse:
            type: object
            properties:
                users:
                    type: array
                    items:
                        $ref: '#/components/schemas/users.v1.User'
                pagination:
                    $ref: '#/components/schemas/users.v1.Pagination'
        users.v1.Pagination:
            type: object
            properties:
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
        users.v1.SearchUsersResponse:
            type: object
            properties:
                users:
                    type: array
                    items:
                        $ref: '#/components/schemas/users.v1.User'
                pagination:
                    $ref: '#/components/schemas/users.v1.Pagination'
        users.v1.UpdateUserRequest:
            type: object
            properties:
                id:
                    type: string
                username:
                    type: string
                email:
                    type: string
                phone:
                    type: string
                password:
                    type: string
                picture:
                    type: string
        users.v1.UpdateUserResponse:
            type: object
            properties:
                id:
                    type: string
        users.v1.User:
            type: object
            properties:
                id:
                    type: string
                username:
                    type: string
                email:
                    type: string
                phone:
                    type: string
                password:
                    type: string
                picture:
                    type: string
tags:
    - name: Auth
    - name: Users
